name: Java CI with Maven

on:
  push:
    branches:
      - main  # Trigger the workflow when pushing to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow when a PR is created targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Runs the job on the latest Ubuntu virtual machine

    steps:
    # Step 1: Checkout code from the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Java JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'  # Use the Temurin JDK distribution
        cache: maven  # Enable caching for Maven dependencies

    # Step 3: Compile the project and run tests
    - name: Compile and run tests
      run: mvn clean test  # Clean and test the project

    # Step 4: Generate JaCoCo code coverage report (optional but useful)
    - name: Generate JaCoCo report
      run: mvn jacoco:report  # Generate code coverage report with JaCoCo

    # Step 5: Upload the JaCoCo report as an artifact
    - name: Upload JaCoCo report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: target/site/jacoco  # Path where the JaCoCo report is saved
        # Step 6: Send Slack notification on failure
    - name: Notify Slack on failure
      if: failure()  # Cette étape ne s'exécute que si le build échoue
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": ":x: Le build ou les tests ont échoué sur *${{ github.repository }}* (commit: ${{ github.sha }}). Vérifiez le workflow : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
